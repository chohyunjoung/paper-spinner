/*
    @license
    Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
    This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
    The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
    The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
    Code distributed by Google as part of the polymer project is also
    subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 */

/**************************/
/* STYLES FOR THE SPINNER */
/**************************/

/*
 * Constants:
 *      STROKEWIDTH = 3px
 *      ARCSIZE     = 270 degrees (amount of circle the arc takes up)
 *      ARCTIME     = 1333ms (time it takes to expand and contract arc)
 *      ARCSTARTROT = 216 degrees (how much the start location of the arc
 *                                should rotate each time, 216 gives us a
 *                                5 pointed star shape (it's 360/5 * 3).
 *                                For a 7 pointed star, we might do
 *                                360/7 * 3 = 154.286)
 *      CONTAINERWIDTH = 28px
 *      SHRINK_TIME = 400ms
 */

:host {
  display: inline-block;
  position: relative;
  width: 28px; /* CONTAINERWIDTH */
  height: 28px; /* CONTAINERWIDTH */
}

#spinnerContainer {
  width: 100%;
  height: 100%;
}

#spinnerContainer.active {
  /* duration: 360 * ARCTIME / (ARCSTARTROT + (360-ARCSIZE)) */
  -webkit-animation: container-rotate 1568ms linear infinite;
  animation: container-rotate 1568ms linear infinite;
}

@-webkit-keyframes container-rotate {
  to { -webkit-transform: rotate(360deg) }
}

@keyframes container-rotate {
  to { transform: rotate(360deg) }
}

.spinner-layer {
  position: absolute;
  width: 100%;
  height: 100%;
  border-color: #FF7F7F;
}

/**
 * IMPORTANT NOTE ABOUT CSS ANIMATION PROPERTIES (keanulee):
 *
 * iOS Safari (tested on iOS 8.1) does not handle animation-delay very well - it doesn't
 * guarantee that the animation will start _exactly_ after that value. So we avoid using
 * animation-delay and instead set custom keyframes for each color (as redundant as it
 * seems).
 *
 * We write out each animation in full (instead of separating animation-name,
 * animation-duration, etc.) because under the polyfill, Safari does not recognize those
 * specific properties properly, treats them as -webkit-animation, and overrides the
 * other animation rules. See https://github.com/Polymer/platform/issues/53.
 */
.active .spinner-layer {
  /* durations: 4 * ARCTIME */
  -webkit-animation: fill-unfill-rotate 5332ms cubic-bezier(0.4, 0.0, 0.2, 1) infinite both;
  animation: fill-unfill-rotate 5332ms cubic-bezier(0.4, 0.0, 0.2, 1) infinite both;
}

@-webkit-keyframes fill-unfill-rotate {
  from {
    -webkit-transform: rotate(0deg);
    -webkit-filter: hue-rotate(217deg) saturate(1.46) brightness(0.96);
  }
  12.5% {
    -webkit-transform: rotate(135deg); /* 0.5 * ARCSIZE */
    -webkit-filter: hue-rotate(217deg) saturate(1.46) brightness(0.96);
  }
  25% {
    -webkit-transform: rotate(270deg); /* 1 * ARCSIZE */
    -webkit-filter: hue-rotate(365deg) saturate(1.5) brightness(0.86);
  }
  37.5% {
    -webkit-transform: rotate(405deg); /* 1.5 * ARCSIZE */
    -webkit-filter: hue-rotate(365deg) saturate(1.5) brightness(0.86);
  }
  50% {
    -webkit-transform: rotate(540deg); /* 2 * ARCSIZE */
    -webkit-filter: hue-rotate(404deg) saturate(2) brightness(0.96);
  }
  62.5% {
    -webkit-transform: rotate(675deg); /* 2.5 * ARCSIZE */
    -webkit-filter: hue-rotate(404deg) saturate(2) brightness(0.96);
  }
  75% {
    -webkit-transform: rotate(810deg); /* 3 * ARCSIZE */
    -webkit-filter: hue-rotate(511deg) saturate(1.8) brightness(0.62);
  }
  87.5% {
    -webkit-transform: rotate(945deg); /* 3.5 * ARCSIZE */
    -webkit-filter: hue-rotate(511deg) saturate(1.8) brightness(0.62);
  }
  to {
    -webkit-transform: rotate(1080deg); /* 4 * ARCSIZE */
    -webkit-filter: hue-rotate(577deg) saturate(1.46) brightness(0.96);
  }
}

@keyframes fill-unfill-rotate {
  from {
    transform: rotate(0deg);
    filter: hue-rotate(217deg) saturate(1.46) brightness(0.96);
  }
  12.5% {
    transform: rotate(135deg); /* 0.5 * ARCSIZE */
    filter: hue-rotate(217deg) saturate(1.46) brightness(0.96);
  }
  25% {
    transform: rotate(270deg); /* 1 * ARCSIZE */
    filter: hue-rotate(365deg) saturate(1.5) brightness(0.86);
  }
  37.5% {
    transform: rotate(405deg); /* 1.5 * ARCSIZE */
    filter: hue-rotate(365deg) saturate(1.5) brightness(0.86);
  }
  50% {
    transform: rotate(540deg); /* 2 * ARCSIZE */
    filter: hue-rotate(404deg) saturate(2) brightness(0.96);
  }
  62.5% {
    transform: rotate(675deg); /* 2.5 * ARCSIZE */
    filter: hue-rotate(404deg) saturate(2) brightness(0.96);
  }
  75% {
    transform: rotate(810deg); /* 3 * ARCSIZE */
    filter: hue-rotate(511deg) saturate(1.8) brightness(0.62);
  }
  87.5% {
    transform: rotate(945deg); /* 3.5 * ARCSIZE */
    filter: hue-rotate(511deg) saturate(1.8) brightness(0.62);
  }
  to {
    transform: rotate(1080deg); /* 4 * ARCSIZE */
    filter: hue-rotate(577deg) saturate(1.46) brightness(0.96);
  }
}

/**
 * Patch the gap that appear between the two adjacent div.circle-clipper while the
 * spinner is rotating (appears on Chrome 38, Safari 7.1, and IE 11).
 */
.gap-patch {
  position: absolute;
  box-sizing: border-box;
  top: 0;
  left: 45%;
  width: 10%;
  height: 100%;
  overflow: hidden;
  border-color: inherit;
}

.gap-patch .circle {
  width: 1000%;
  left: -450%;
}

.circle-clipper {
  display: inline-block;
  position: relative;
  width: 50%;
  height: 100%;
  overflow: hidden;
  border-color: inherit;
}

.circle-clipper .circle {
  width: 200%;
}

.circle {
  box-sizing: border-box;
  height: 100%;
  border-width: 3px; /* STROKEWIDTH */
  border-style: solid;
  border-color: inherit;
  border-bottom-color: transparent !important;
  border-radius: 50%;
  -webkit-animation: none;
  animation: none;
}

.circle-clipper.left .circle {
  border-right-color: transparent !important;
  -webkit-transform: rotate(129deg);
  transform: rotate(129deg);
}

.circle-clipper.right .circle {
  left: -100%;
  border-left-color: transparent !important;
  -webkit-transform: rotate(-129deg);
  transform: rotate(-129deg);
}

.active .circle-clipper.left .circle {
  /* duration: ARCTIME */
  -webkit-animation: left-spin 1333ms cubic-bezier(0.4, 0.0, 0.2, 1) infinite both;
  animation: left-spin 1333ms cubic-bezier(0.4, 0.0, 0.2, 1) infinite both;
}

.active .circle-clipper.right .circle {
  /* duration: ARCTIME */
  -webkit-animation: right-spin 1333ms cubic-bezier(0.4, 0.0, 0.2, 1) infinite both;
  animation: right-spin 1333ms cubic-bezier(0.4, 0.0, 0.2, 1) infinite both;
}

@-webkit-keyframes left-spin {
  from { -webkit-transform: rotate(130deg); }
  50% { -webkit-transform: rotate(-5deg); }
  to { -webkit-transform: rotate(130deg); }
}

@keyframes left-spin {
  from { transform: rotate(130deg); }
  50% { transform: rotate(-5deg); }
  to { transform: rotate(130deg); }
}

@-webkit-keyframes right-spin {
  from { -webkit-transform: rotate(-130deg); }
  50% { -webkit-transform: rotate(5deg); }
  to { -webkit-transform: rotate(-130deg); }
}

@keyframes right-spin {
  from { transform: rotate(-130deg); }
  50% { transform: rotate(5deg); }
  to { transform: rotate(-130deg); }
}

#spinnerContainer.cooldown {
  /* duration: SHRINK_TIME */
  -webkit-animation: container-rotate 1568ms linear infinite, fade-out 400ms cubic-bezier(0.4, 0.0, 0.2, 1);
  animation: container-rotate 1568ms linear infinite, fade-out 400ms cubic-bezier(0.4, 0.0, 0.2, 1);
}

@-webkit-keyframes fade-out {
  from { opacity: 1; }
  to { opacity: 0; }
}

@keyframes fade-out {
  from { opacity: 1; }
  to { opacity: 0; }
}
